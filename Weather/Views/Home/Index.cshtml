@using Weather.Services.Interfaces;
@using Weather.ViewModels;
@model CityesByRegionsModel

@{
    ViewData["Title"] = "Домашняя страница";
    int numberOfColumnsInRow = 4;
}

<div class="container">
    @if (Model != null)
    {
        try
        {
            <div class="cityes_count">
                <p>
                    <h4>Погода в @Model.CityesFromJson.Count() регионах страны</h4>
                </p>
            </div>
            var cityList = Model.CityesFromJson;
            var regionsByGroup = Model.RegionGroup.RegiosByGroupWithCharKey;
            var regionsByGropWithNumberKeys = Model.RegionGroup.RegionsByGropWithNumberKeys;
            var cityes = Model.RegionGroup.CityesInRegion;

            List<char> regionKeys = new List<char>(regionsByGroup.Keys);

            for (int i = 0; i < regionsByGropWithNumberKeys.Count(); i += numberOfColumnsInRow)
            {
                <div class="row">
                    @for (int j = i; j < i + numberOfColumnsInRow && j < regionsByGropWithNumberKeys.Count; j++)
                    {
                        var item = regionsByGropWithNumberKeys[j];
                        <div class="col">
                            <div class="region_first_letter">
                                <strong>@regionKeys[j]</strong>
                            </div>
                            @foreach (string region in item)
                            {
                                <p class="region_link">
                                    <a asp-action="CityesReg" asp-route-region="@region">@region</a>
                                </p>
                            }
                        </div>
                    }
                </div>
            }
        }
        catch (Exception ex) { var erMessage = ex.Message; }
    }
    else
    {
        <div class="notCityList">
            <div asp-validation-summary="All"></div>
        </div>
    }  
</div>
